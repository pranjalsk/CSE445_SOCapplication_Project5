//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOAPServices.ServiceReferenceDataAccess {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceDataAccess.IServiceDataAccess")]
    public interface IServiceDataAccess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/read", ReplyAction="http://tempuri.org/IServiceDataAccess/readResponse")]
        string[] read(int zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/read", ReplyAction="http://tempuri.org/IServiceDataAccess/readResponse")]
        System.Threading.Tasks.Task<string[]> readAsync(int zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/readAll", ReplyAction="http://tempuri.org/IServiceDataAccess/readAllResponse")]
        string[] readAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/readAll", ReplyAction="http://tempuri.org/IServiceDataAccess/readAllResponse")]
        System.Threading.Tasks.Task<string[]> readAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/createDB", ReplyAction="http://tempuri.org/IServiceDataAccess/createDBResponse")]
        void createDB();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/createDB", ReplyAction="http://tempuri.org/IServiceDataAccess/createDBResponse")]
        System.Threading.Tasks.Task createDBAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/addNew", ReplyAction="http://tempuri.org/IServiceDataAccess/addNewResponse")]
        bool addNew(int id, string name, int zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/addNew", ReplyAction="http://tempuri.org/IServiceDataAccess/addNewResponse")]
        System.Threading.Tasks.Task<bool> addNewAsync(int id, string name, int zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/remove", ReplyAction="http://tempuri.org/IServiceDataAccess/removeResponse")]
        bool remove(int id, string name, int zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDataAccess/remove", ReplyAction="http://tempuri.org/IServiceDataAccess/removeResponse")]
        System.Threading.Tasks.Task<bool> removeAsync(int id, string name, int zip);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceDataAccessChannel : SOAPServices.ServiceReferenceDataAccess.IServiceDataAccess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceDataAccessClient : System.ServiceModel.ClientBase<SOAPServices.ServiceReferenceDataAccess.IServiceDataAccess>, SOAPServices.ServiceReferenceDataAccess.IServiceDataAccess {
        
        public ServiceDataAccessClient() {
        }
        
        public ServiceDataAccessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceDataAccessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDataAccessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDataAccessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] read(int zip) {
            return base.Channel.read(zip);
        }
        
        public System.Threading.Tasks.Task<string[]> readAsync(int zip) {
            return base.Channel.readAsync(zip);
        }
        
        public string[] readAll() {
            return base.Channel.readAll();
        }
        
        public System.Threading.Tasks.Task<string[]> readAllAsync() {
            return base.Channel.readAllAsync();
        }
        
        public void createDB() {
            base.Channel.createDB();
        }
        
        public System.Threading.Tasks.Task createDBAsync() {
            return base.Channel.createDBAsync();
        }
        
        public bool addNew(int id, string name, int zip) {
            return base.Channel.addNew(id, name, zip);
        }
        
        public System.Threading.Tasks.Task<bool> addNewAsync(int id, string name, int zip) {
            return base.Channel.addNewAsync(id, name, zip);
        }
        
        public bool remove(int id, string name, int zip) {
            return base.Channel.remove(id, name, zip);
        }
        
        public System.Threading.Tasks.Task<bool> removeAsync(int id, string name, int zip) {
            return base.Channel.removeAsync(id, name, zip);
        }
    }
}
